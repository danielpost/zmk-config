/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define NAV  1
#define NUM  2
#define SYM  3

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
    combos {
        compatible = "zmk,combos";
        /* KEY POSITIONS
          ╭────────────────────╮ ╭────────────────────╮
          │  0   1   2   3   4 │ │  5   6   7   8   9 │
          │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
          │ 20  21  22  23  24 │ │ 25  26  27  28  29 │
          ╰───────────╮ 30  31 │ │ 32  33 ╭───────────╯
                      ╰────────╯ ╰────────╯            */
        combo_esc {
            timeout-ms = <50>;
            key-positions = <10 19>;
            bindings = <&kp ESC>;
        };

        combo_minus {
            timeout-ms = <50>;
            key-positions = <3 6>;
            bindings = <&kp MINUS>;
        };

        combo_under {
            timeout-ms = <50>;
            key-positions = <23 26>;
            bindings = <&kp UNDER>;
        };

        combo_capsword {
            timeout-ms = <50>;
            key-positions = <20 29>;
            bindings = <&caps_word>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp Q           &kp W           &kp F           &kp P           &kp B              &kp J      &kp L           &kp U           &kp Y           &kp SQT
                &hm LCTL A  &hm LALT R  &hm LCMD S  &hm LSFT T  &kp G              &kp M      &hm RSFT N  &hm RCMD E  &hm RALT I  &hm RCTL O
                &kp Z           &kp X           &kp C           &kp D           &kp V              &kp K      &kp H           &kp CMMA        &kp DOT         &kp FSLH
                                                                &lt NAV TAB     &lt NUM SPC        &lt SYM ENTER  &kp BSPC
            >;
        };

        nav_layer {
            bindings = <
                &none  &none  &none  &none  &none          &none      &kp LBRC    &kp RBRC   &kp LPAR  &kp RPAR
                &trans &trans &trans &trans &trans         &none      &kp LEFT    &kp DOWN   &kp UP    &kp RIGHT
                &none  &none  &none  &none  &none          &none      &kp LBKT    &kp RBKT   &kp GT    &kp LT
                                     &trans &kp SPC        &kp ENTER  &kp BSPC
            >;
        };

        num_layer {
            bindings = <
                &none  &none  &none  &none  &none          &none   &kp N7  &kp N8  &kp N9  &none
                &trans &trans &trans &trans &trans         &none   &kp N4  &kp N5  &kp N6  &none
                &none  &none  &none  &none  &none          &kp N0  &kp N1  &kp N2  &kp N3  &none
                                     &trans &kp SPC        &kp ENTER  &kp BSPC
            >;
        };

        sym_layer {
            bindings = <
                &none      &kp SQT    &kp KP_ASTERISK  &kp AMPERSAND  &none        &none  &none  &none  &none  &none
                &kp DQT    &kp CARET  &kp PERCENT      &kp DOLLAR     &kp PLUS     &none  &none  &none  &none  &none
                &kp TILDE  &kp HASH   &kp AT           &kp EXCL       &kp PIPE     &none  &none  &none  &none  &none
                                                       &trans         &kp SPC      &kp ENTER  &kp BSPC
            >;
        };
    };
};
